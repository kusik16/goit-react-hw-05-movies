{"version":3,"file":"static/js/760.2d272a5f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/reviews/Reviews.module.css?e359","components/pages/reviews/Reviews.js","services/MovieService.js","hooks/http.hook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews__author\":\"Reviews_reviews__author__fqbCY\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useMovieService from 'services/MovieService';\n\nimport reviewsCSS from './Reviews.module.css';\n\nconst Reviews = () => {\n\tconst [movieReviews, setMovieReviews] = useState(null);\n\n\tconst { getMovieReviews } = useMovieService();\n\n\tconst { movieId } = useParams();\n\n\tuseEffect(() => {\n\t\tgetMovieReviews(movieId).then(res => {\n\t\t\tsetMovieReviews(res);\n\t\t});\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<ul>\n\t\t\t{movieReviews && movieReviews.length > 0 ? (\n\t\t\t\tmovieReviews.map(Reviews => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={Reviews.id}>\n\t\t\t\t\t\t\t<div className={reviewsCSS.author}>\n\t\t\t\t\t\t\t\tAuthor: {Reviews.author}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p>{Reviews.content}</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t) : (\n\t\t\t\t<div>We don't have any reviews for this movie.</div>\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default Reviews;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMovieService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp();\n\n\tconst _apiBase = 'https://api.themoviedb.org/3/';\n\tconst _apiKey = 'api_key=a01a0779b6da55b3cb3231f967e502fc';\n\n\tconst getTrandingToday = async () => {\n\t\tconst res = await request(`${_apiBase}trending/movie/day?${_apiKey}`);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst searchFilmByName = async name => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}search/movie?${_apiKey}&query=${name}`\n\t\t);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst getMovieDetails = async movieId => {\n\t\tconst res = await request(`${_apiBase}movie/${movieId}?${_apiKey}`);\n\t\treturn res;\n\t};\n\n\tconst getMovieCredits = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/credits?${_apiKey}`\n\t\t);\n\t\treturn res.cast.map(_transformCast);\n\t};\n\n\tconst getMovieReviews = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/reviews?${_apiKey}`\n\t\t);\n\t\treturn res.results.map(_transformReviews);\n\t};\n\n\tconst _transformFilms = film => {\n\t\treturn {\n\t\t\tid: film.id,\n\t\t\ttitle: film.title,\n\t\t};\n\t};\n\n\tconst _transformCast = cast => {\n\t\treturn {\n\t\t\tid: cast.id,\n\t\t\tprofile_path: cast.profile_path,\n\t\t\tname: cast.name,\n\t\t\tcharacter: cast.character,\n\t\t};\n\t};\n\n\tconst _transformReviews = review => {\n\t\treturn {\n\t\t\tid: review.id,\n\t\t\tauthor: review.author,\n\t\t\tcontent: review.content,\n\t\t};\n\t};\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetTrandingToday,\n\t\tsearchFilmByName,\n\t\tgetMovieDetails,\n\t\tgetMovieCredits,\n\t\tgetMovieReviews,\n\t};\n};\n\nexport default useMovieService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = 'GET',\n\t\t\tbody = null,\n\t\t\theaders = { 'Content-Type': 'application/json' }\n\t\t) => {\n\t\t\tsetProcess('loading');\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error');\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading');\n\t}, []);\n\n\treturn { request, clearError, process, setProcess };\n};\n"],"names":["useState","movieReviews","setMovieReviews","getMovieReviews","useMovieService","movieId","useParams","useEffect","then","res","length","map","Reviews","className","reviewsCSS","author","content","id","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getTrandingToday","results","_transformFilms","searchFilmByName","name","getMovieDetails","getMovieCredits","cast","_transformCast","_transformReviews","film","title","profile_path","character","review"],"sourceRoot":""}