{"version":3,"file":"static/js/932.48e4800a.chunk.js","mappings":"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","sources":["components/trending/Trending.js","services/MovieService.js","hooks/http.hook.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMovieService from 'services/MovieService';\n\nimport './trending.css';\n\nconst Trending = () => {\n\tconst [trendingList, setTrendingList] = useState([]);\n\n\tconst { getTrandingToday, setProcess } = useMovieService();\n\n\tuseEffect(() => {\n\t\tgetTrandingToday()\n\t\t\t.then(res => setTrendingList(res))\n\t\t\t.then(() => setProcess('confirmed'));\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className='trending__title' >Trending today</h1>\n\t\t\t<ul>\n\t\t\t\t{trendingList.map(item => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li className='trending__list-item' key={item.id}>\n\t\t\t\t\t\t\t<Link to={`movies/${item.id}`}>{item.title}</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default Trending;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMovieService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp();\n\n\tconst _apiBase = 'https://api.themoviedb.org/3/';\n\tconst _apiKey = 'api_key=a01a0779b6da55b3cb3231f967e502fc';\n\n\tconst getTrandingToday = async () => {\n\t\tconst res = await request(`${_apiBase}trending/movie/day?${_apiKey}`);\n\t\tconsole.log(res);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst searchFilmByName = async name => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}search/movie?${_apiKey}&query=${name}`\n\t\t);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst getMovieDetails = async movieId => {\n\t\tconst res = await request(`${_apiBase}movie/${movieId}?${_apiKey}`);\n\t\treturn res;\n\t};\n\n\tconst getMovieCredits = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/credits?${_apiKey}`\n\t\t);\n\t\treturn res.cast.map(_transformCast);\n\t};\n\n\tconst getMovieReviews = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/reviews?${_apiKey}`\n\t\t);\n\t\tconsole.log(res);\n\t\treturn res.results.map(_transformReviews);\n\t};\n\n\tconst _transformFilms = film => {\n\t\treturn {\n\t\t\tid: film.id,\n\t\t\ttitle: film.title,\n\t\t};\n\t};\n\n\tconst _transformCast = cast => {\n\t\treturn {\n\t\t\tid: cast.id,\n\t\t\tprofile_path: cast.profile_path,\n\t\t\tname: cast.name,\n\t\t\tcharacter: cast.character,\n\t\t};\n\t};\n\n\tconst _transformReviews = review => {\n\t\treturn {\n\t\t\tid: review.id,\n\t\t\tauthor: review.author,\n\t\t\tcontent: review.content,\n\t\t};\n\t};\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetTrandingToday,\n\t\tsearchFilmByName,\n\t\tgetMovieDetails,\n\t\tgetMovieCredits,\n\t\tgetMovieReviews,\n\t};\n};\n\nexport default useMovieService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = 'GET',\n\t\t\tbody = null,\n\t\t\theaders = { 'Content-Type': 'application/json' }\n\t\t) => {\n\t\t\tsetProcess('loading');\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error');\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading');\n\t}, []);\n\n\treturn { request, clearError, process, setProcess };\n};\n"],"names":["useState","trendingList","setTrendingList","useMovieService","getTrandingToday","setProcess","useEffect","then","res","className","map","item","to","id","title","process","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","console","log","results","_transformFilms","searchFilmByName","name","getMovieDetails","movieId","getMovieCredits","cast","_transformCast","getMovieReviews","_transformReviews","film","profile_path","character","review","author","content"],"sourceRoot":""}