{"version":3,"file":"static/js/982.47096623.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/movieInfo/MovieInfo.module.css?bfc8","components/pages/movieInfo/MovieInfo.js","services/MovieService.js","hooks/http.hook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieInfo_container__dUBpg\",\"image\":\"MovieInfo_image__vAv7T\",\"info\":\"MovieInfo_info__0KAle\",\"genresList\":\"MovieInfo_genresList__Uu09B\",\"genresItem\":\"MovieInfo_genresItem__ZafhS\",\"additional\":\"MovieInfo_additional__id35M\"};","import { useState, useEffect, Suspense } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport useMovieService from 'services/MovieService';\nimport movieInfoCSS from './MovieInfo.module.css';\nimport Spinner from '../../spinner/Spinner';\n\nconst MovieInfo = () => {\n\tconst [movieInfo, setMovieInfo] = useState(null);\n\n\tconst { getMovieDetails } = useMovieService();\n\n\tconst { movieId } = useParams();\n\n\tconst location = useLocation();\n\n\tuseEffect(() => {\n\t\tgetMovieDetails(movieId).then(res => {\n\t\t\tsetMovieInfo(res);\n\t\t});\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{movieInfo && (\n\t\t\t\t<div>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={\n\t\t\t\t\t\t\tlocation.state?.from ??\n\t\t\t\t\t\t\t'/movies'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tgo back\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className={movieInfoCSS.container}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName={movieInfoCSS.image}\n\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w200/${movieInfo.poster_path}`}\n\t\t\t\t\t\t\talt=\"poster\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className={movieInfoCSS.info}>\n\t\t\t\t\t\t\t<h1>{movieInfo.title}</h1>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tUser score: {Math.floor(movieInfo.popularity)}%\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h2>Overview</h2>\n\t\t\t\t\t\t\t<p>{movieInfo.overview}</p>\n\t\t\t\t\t\t\t<h3>Genres</h3>\n\t\t\t\t\t\t\t<ul className={movieInfoCSS.genresList}>\n\t\t\t\t\t\t\t\t{movieInfo.genres.map(genre => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\tclassName={movieInfoCSS.genresItem}\n\t\t\t\t\t\t\t\t\t\t\tkey={genre.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{genre.name}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={movieInfoCSS.additional}>\n\t\t\t\t\t\t<div>Additional information</div>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto=\"cast\"\n\t\t\t\t\t\t\t\t\tstate={{\n\t\t\t\t\t\t\t\t\t\tfrom: location.state?.from ?? '/movies',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCast\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto=\"reviews\"\n\t\t\t\t\t\t\t\t\tstate={{\n\t\t\t\t\t\t\t\t\t\tfrom: location.state?.from ?? '/movies',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tReviews\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Suspense fallback={<Spinner />}>\n\t\t\t\t\t\t<Outlet />\n\t\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default MovieInfo;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMovieService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp();\n\n\tconst _apiBase = 'https://api.themoviedb.org/3/';\n\tconst _apiKey = 'api_key=a01a0779b6da55b3cb3231f967e502fc';\n\n\tconst getTrandingToday = async () => {\n\t\tconst res = await request(`${_apiBase}trending/movie/day?${_apiKey}`);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst searchFilmByName = async name => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}search/movie?${_apiKey}&query=${name}`\n\t\t);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst getMovieDetails = async movieId => {\n\t\tconst res = await request(`${_apiBase}movie/${movieId}?${_apiKey}`);\n\t\treturn res;\n\t};\n\n\tconst getMovieCredits = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/credits?${_apiKey}`\n\t\t);\n\t\treturn res.cast.map(_transformCast);\n\t};\n\n\tconst getMovieReviews = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/reviews?${_apiKey}`\n\t\t);\n\t\treturn res.results.map(_transformReviews);\n\t};\n\n\tconst _transformFilms = film => {\n\t\treturn {\n\t\t\tid: film.id,\n\t\t\ttitle: film.title,\n\t\t};\n\t};\n\n\tconst _transformCast = cast => {\n\t\treturn {\n\t\t\tid: cast.id,\n\t\t\tprofile_path: cast.profile_path,\n\t\t\tname: cast.name,\n\t\t\tcharacter: cast.character,\n\t\t};\n\t};\n\n\tconst _transformReviews = review => {\n\t\treturn {\n\t\t\tid: review.id,\n\t\t\tauthor: review.author,\n\t\t\tcontent: review.content,\n\t\t};\n\t};\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetTrandingToday,\n\t\tsearchFilmByName,\n\t\tgetMovieDetails,\n\t\tgetMovieCredits,\n\t\tgetMovieReviews,\n\t};\n};\n\nexport default useMovieService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = 'GET',\n\t\t\tbody = null,\n\t\t\theaders = { 'Content-Type': 'application/json' }\n\t\t) => {\n\t\t\tsetProcess('loading');\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error');\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading');\n\t}, []);\n\n\treturn { request, clearError, process, setProcess };\n};\n"],"names":["useState","movieInfo","setMovieInfo","getMovieDetails","useMovieService","movieId","useParams","location","useLocation","useEffect","then","res","to","state","from","className","movieInfoCSS","src","poster_path","alt","title","Math","floor","popularity","overview","genres","map","genre","name","id","Suspense","fallback","Spinner","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getTrandingToday","results","_transformFilms","searchFilmByName","getMovieCredits","cast","_transformCast","getMovieReviews","_transformReviews","film","profile_path","character","review","author","content"],"sourceRoot":""}