{"version":3,"file":"static/js/545.fb1d0804.chunk.js","mappings":"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","sources":["components/movies/Movies.js","services/MovieService.js","hooks/http.hook.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n\tLink,\n\tuseNavigate,\n\tcreateSearchParams,\n\tuseLocation,\n} from 'react-router-dom';\n\nimport useMovieService from 'services/MovieService';\n\nconst Movies = () => {\n\tconst [searchText, setSearchText] = useState('');\n\tconst [moviesArray, setMoviesArray] = useState([]);\n\n\tconst { searchFilmByName } = useMovieService();\n\n\tconst navigate = useNavigate();\n\tconst params = { query: searchText };\n\n\tconst { search } = useLocation();\n\n\tconst onSearchFilm = name => {\n\t\tsearchFilmByName(name).then(res => setMoviesArray(res));\n\t};\n\n\tuseEffect(() => {\n\t\tif (search) {\n\t\t\tonSearchFilm(search.split('=')[1]);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [search]);\n\n\tconst goToSearch = () =>\n\t\tnavigate({\n\t\t\tpathname: '/goit-react-hw-05-movies/movies',\n\t\t\tsearch: `?${createSearchParams(params)}`,\n\t\t});\n\n\treturn (\n\t\t<>\n\t\t\t<input onChange={e => setSearchText(e.target.value)} type=\"text\" />\n\t\t\t<button onClick={goToSearch}>search</button>\n\t\t\t<ul>\n\t\t\t\t{moviesArray.map(item => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={item.id}>\n\t\t\t\t\t\t\t<Link to={`${item.id}`}>{item.title}</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default Movies;\n","import { useHttp } from '../hooks/http.hook';\n\nconst useMovieService = () => {\n\tconst { request, clearError, process, setProcess } = useHttp();\n\n\tconst _apiBase = 'https://api.themoviedb.org/3/';\n\tconst _apiKey = 'api_key=a01a0779b6da55b3cb3231f967e502fc';\n\n\tconst getTrandingToday = async () => {\n\t\tconst res = await request(`${_apiBase}trending/movie/day?${_apiKey}`);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst searchFilmByName = async name => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}search/movie?${_apiKey}&query=${name}`\n\t\t);\n\t\treturn res.results.map(_transformFilms);\n\t};\n\n\tconst getMovieDetails = async movieId => {\n\t\tconst res = await request(`${_apiBase}movie/${movieId}?${_apiKey}`);\n\t\treturn res;\n\t};\n\n\tconst getMovieCredits = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/credits?${_apiKey}`\n\t\t);\n\t\treturn res.cast.map(_transformCast);\n\t};\n\n\tconst getMovieReviews = async movieId => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}movie/${movieId}/reviews?${_apiKey}`\n\t\t);\n\t\treturn res.results.map(_transformReviews);\n\t};\n\n\tconst _transformFilms = film => {\n\t\treturn {\n\t\t\tid: film.id,\n\t\t\ttitle: film.title,\n\t\t};\n\t};\n\n\tconst _transformCast = cast => {\n\t\treturn {\n\t\t\tid: cast.id,\n\t\t\tprofile_path: cast.profile_path,\n\t\t\tname: cast.name,\n\t\t\tcharacter: cast.character,\n\t\t};\n\t};\n\n\tconst _transformReviews = review => {\n\t\treturn {\n\t\t\tid: review.id,\n\t\t\tauthor: review.author,\n\t\t\tcontent: review.content,\n\t\t};\n\t};\n\n\treturn {\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t\tgetTrandingToday,\n\t\tsearchFilmByName,\n\t\tgetMovieDetails,\n\t\tgetMovieCredits,\n\t\tgetMovieReviews,\n\t};\n};\n\nexport default useMovieService;\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = 'GET',\n\t\t\tbody = null,\n\t\t\theaders = { 'Content-Type': 'application/json' }\n\t\t) => {\n\t\t\tsetProcess('loading');\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error');\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading');\n\t}, []);\n\n\treturn { request, clearError, process, setProcess };\n};\n"],"names":["useState","searchText","setSearchText","moviesArray","setMoviesArray","searchFilmByName","useMovieService","navigate","useNavigate","params","query","search","useLocation","useEffect","name","split","then","res","onChange","e","target","value","type","onClick","pathname","createSearchParams","map","item","to","id","title","process","setProcess","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getTrandingToday","results","_transformFilms","getMovieDetails","movieId","getMovieCredits","cast","_transformCast","getMovieReviews","_transformReviews","film","profile_path","character","review","author","content"],"sourceRoot":""}